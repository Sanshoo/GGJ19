[gd_scene load_steps=24 format=2]

[ext_resource path="res://Game.gd" type="Script" id=1]
[ext_resource path="res://assets/bg.png" type="Texture" id=2]
[ext_resource path="res://Level.tscn" type="PackedScene" id=3]
[ext_resource path="res://Camera2D.gd" type="Script" id=4]
[ext_resource path="res://screenshake.tscn" type="PackedScene" id=5]
[ext_resource path="res://assets/offgame/vignette.shader" type="Shader" id=6]
[ext_resource path="res://assets/offgame/vignette.png" type="Texture" id=7]
[ext_resource path="res://assets/sanity-bar/under.png" type="Texture" id=8]
[ext_resource path="res://assets/sanity-bar/over.png" type="Texture" id=9]
[ext_resource path="res://assets/sanity-bar/progress.png" type="Texture" id=10]
[ext_resource path="res://assets/newGreenwall2.png" type="Texture" id=11]
[ext_resource path="res://assets/gradient.png" type="Texture" id=12]
[ext_resource path="res://Wolf.tscn" type="PackedScene" id=13]
[ext_resource path="res://assets/ost/Intro Tema NaÌƒo loope.wav" type="AudioStream" id=14]
[ext_resource path="res://Hand.gd" type="Script" id=15]
[ext_resource path="res://assets/title/bg.png" type="Texture" id=16]
[ext_resource path="res://assets/polaroid.png" type="Texture" id=17]

[sub_resource type="GDScript" id=1]

script/source = "extends Node
\"\"\"
screenshake by kcabra
add as child of a Camera2D node and call the shake() method
based on jonny morrill post
(https://jonny.morrill.me/en/blog/gamedev-how-to-implement-a-camera-shake-effect/)
\"\"\"

# nodes
onready var camera = get_node(\"..\")
onready var tween = Tween.new()
# params
export (float, 0, 10) var duration = 0.3 # in secs
export (int, 0, 256) var magnitude = 10  # in pixels
export (int, 0, 240) var frequency = 50  # in hertz
# samples array
var samples

func _ready():
	add_child(tween)

func generate_samples():
	samples = []
	randomize()
	
	var sample_count = duration * frequency
	for i in range(sample_count):
		var decay_factor = range_lerp(i, 0, sample_count-1, 1.0, 0.0)
		samples.append( Vector2(rand_range(-1, 1), rand_range(-1, 1)) * magnitude * decay_factor)

func shake():
	generate_samples()
	var period = 1.0 / frequency
	for shake in samples:
		tween.interpolate_property(camera, \"offset\", camera.offset, shake, period, Tween.TRANS_LINEAR, Tween.EASE_IN_OUT)
		tween.start()
		yield(tween, \"tween_completed\")
	
	pass
"

[sub_resource type="ShaderMaterial" id=2]

shader = ExtResource( 6 )
shader_param/vignette_intensity = 0.0

[sub_resource type="Animation" id=3]

length = 0.3
tracks/0/type = "value"
tracks/0/path = NodePath("hand:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 250, 300 ), Vector2( 250, 876 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("fade:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.784314 ), Color( 1, 1, 1, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../../OST:volume_db")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ -23.0, 0.0 ]
}

[sub_resource type="Animation" id=4]

length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("hand:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 250, 876 ), Vector2( 250, 300 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("fade:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.784314 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../../OST:volume_db")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, -23.0 ]
}

[sub_resource type="Shader" id=5]

code = "shader_type canvas_item;

void fragment() {
	COLOR = texture(TEXTURE, UV);
}"

[sub_resource type="ShaderMaterial" id=6]

shader = SubResource( 5 )

[node name="Game" type="Node" groups=[
"master",
]]
script = ExtResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
position = Vector2( 224, -3616 )
scale = Vector2( 0.7, 0.7 )
z_index = -2
texture = ExtResource( 2 )
region_enabled = true
region_rect = Rect2( 300, 0, 1200, 15000 )

[node name="Level" parent="." instance=ExtResource( 3 )]

[node name="Camera" type="Camera2D" parent="." groups=[
"camera",
]]
pause_mode = 1
position = Vector2( 224, 480 )
current = true
smoothing_enabled = true
drag_margin_left = 0.0
drag_margin_top = 0.0
drag_margin_right = 0.0
drag_margin_bottom = 0.0
script = ExtResource( 4 )

[node name="screenshake" parent="Camera" instance=ExtResource( 5 )]

[node name="screenshake2" parent="Camera" instance=ExtResource( 5 )]
script = SubResource( 1 )
duration = 3.0
magnitude = 8

[node name="GUI" type="CanvasLayer" parent="."]
pause_mode = 1
layer = 2

[node name="SanityVignette" type="TextureRect" parent="GUI"]
material = SubResource( 2 )
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -590.0
margin_top = -600.0
texture = ExtResource( 7 )
expand = true

[node name="SanityBar" type="TextureProgress" parent="GUI"]
pause_mode = 1
margin_left = 11.0
margin_top = 21.0
margin_right = 53.0
margin_bottom = 131.0
value = 100.0
texture_under = ExtResource( 8 )
texture_over = ExtResource( 9 )
texture_progress = ExtResource( 10 )
fill_mode = 3

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]
layer = 1

[node name="ParallaxLayer" type="ParallaxLayer" parent="ParallaxBackground"]
motion_scale = Vector2( 1, 0.9 )

[node name="leftwall" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( -5, -4096 )
scale = Vector2( 1.5, 1.5 )
texture = ExtResource( 11 )
region_enabled = true
region_rect = Rect2( 0, 0, 145, 10000 )

[node name="rightwall" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 434.299, -4064 )
scale = Vector2( 1.5, 1.5 )
texture = ExtResource( 11 )
region_enabled = true
region_rect = Rect2( 480, 0, 120, 10000 )

[node name="leftfade" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 63, -4032 )
z_index = -1
texture = ExtResource( 12 )
region_enabled = true
region_rect = Rect2( 0, 0, 100, 10000 )

[node name="rightfade" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 393.953, -4029.42 )
z_index = -1
texture = ExtResource( 12 )
flip_h = true
region_enabled = true
region_rect = Rect2( 0, 0, 100, 10000 )

[node name="Wolf" parent="." groups=[
"wolf",
] instance=ExtResource( 13 )]
visible = false
position = Vector2( 224, -2752 )

[node name="OST" type="AudioStreamPlayer" parent="." groups=[
"ost",
]]
stream = ExtResource( 14 )
autoplay = true

[node name="Hand" type="CanvasLayer" parent="." groups=[
"hand",
]]
layer = 2
script = ExtResource( 15 )

[node name="Node2D" type="Node2D" parent="Hand"]
visible = false

[node name="fade" type="Sprite" parent="Hand/Node2D"]
modulate = Color( 1, 1, 1, 0 )
position = Vector2( 295, 300 )
texture = ExtResource( 16 )

[node name="hand" type="Sprite" parent="Hand/Node2D"]
position = Vector2( 250, 876 )
texture = ExtResource( 17 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Hand/Node2D"]
anims/hand-down = SubResource( 3 )
anims/hand-up = SubResource( 4 )

[node name="CanvasModulate" type="CanvasModulate" parent="."]
material = SubResource( 6 )

